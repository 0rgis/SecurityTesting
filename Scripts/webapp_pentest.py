import os
import sys
import requests
from bs4 import BeautifulSoup

def run_command(cmd):
    print(f"Executing: {cmd}")
    os.system(cmd)

def check_cms(target_url):
    cms = None
    try:
        response = requests.get(target_url)
        soup = BeautifulSoup(response.content, 'html.parser')
        meta_generator = soup.find('meta', attrs={'name': 'generator'})

        if meta_generator and 'WordPress' in meta_generator['content']:
            cms = 'WordPress'
        elif meta_generator and 'Joomla' in meta_generator['content']:
            cms = 'Joomla'
    except Exception as e:
        print(f"Error while detecting CMS: {e}")

    return cms

def main():
    if len(sys.argv) != 2:
        print("Usage: python3 pentest_web_app.py <target_url>")
        sys.exit(1)

    target_url = sys.argv[1]

    # Detect the CMS (WordPress or Joomla) if possible
    cms = check_cms(target_url)
    if cms:
        print(f"Detected CMS: {cms}")
    else:
        print("Could not detect CMS")

 # Step 1: Run Nmap to discover open ports and services
    nmap_cmd = f"nmap -sV -p- {target_url}"
    run_command(nmap_cmd)

    # Step 2: Run Nikto to scan for web application vulnerabilities
    nikto_cmd = f"nikto -h {target_url}"
    run_command(nikto_cmd)

    # Step 3: Run Dirb to find hidden files and directories
    dirb_cmd = f"dirb {target_url}"
    run_command(dirb_cmd)

    # Step 4: Run SQLMap to detect and exploit SQL injection vulnerabilities
    sqlmap_cmd = f"sqlmap -u {target_url} --batch --crawl=3"
    run_command(sqlmap_cmd)

    # Step 5: Run XSSer to find and exploit Cross-Site Scripting (XSS) vulnerabilities
    xsser_cmd = f"xsser --auto --url {target_url}"
    run_command(xsser_cmd)

    # Step 6: Run Wfuzz to fuzz web applications
    wfuzz_cmd = f"wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --hc 404 {target_url}/FUZZ"
    run_command(wfuzz_cmd)

    # Step 7: Run Arachni to scan for web application vulnerabilities
    arachni_cmd = f"arachni {target_url} --output-only-positives --report-save-path arachni_report.afr"
    run_command(arachni_cmd)
    
    # Step 8: Run WPScan if the target is a WordPress site
    if cms == 'WordPress':
        wpscan_cmd = f"wpscan --url {target_url} --enumerate u"
        run_command(wpscan_cmd)

    # Step 9: Run JoomScan if the target is a Joomla site
    if cms == 'Joomla':
        joomscan_cmd = f"joomscan -u {target_url}"
        run_command(joomscan_cmd)

if __name__ == "__main__":
    main()
